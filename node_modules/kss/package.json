{
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughskennedy.com"
  },
  "name": "kss",
  "description": "NodeJS port of kss: A methodology for documenting CSS and generating styleguides",
  "version": "1.0.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/kss-node/kss-node.git"
  },
  "licence": "MIT",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/mocha/bin/_mocha -u tdd --reporter spec"
  },
  "bin": {
    "kss-node": "./bin/kss-node"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "dependencies": {
    "marked": "0.1.x",
    "natural": "0.0.65",
    "handlebars": "1.3.x",
    "wrench": "1.5.x",
    "less": "1.x.x",
    "stylus": "0.46.x",
    "node-sass": "0.8.x",
    "yargs": "1.x.x",
    "clean-css": "2.x.x",
    "async": "0.1.x"
  },
  "devDependencies": {
    "mocha": "1.x"
  },
  "homepage": "http://kss-node.github.io/kss-node",
  "readme": "# kss-node [![Build Status](https://secure.travis-ci.org/kss-node/kss-node.png?branch=master)](http://travis-ci.org/kss-node/kss-node)\n\nThis is a NodeJS implementation of [Knyle Style Sheets](https://github.com/kneath/kss) (KSS), \"a documentation syntax for CSS\". Beyond that, it's intended to have syntax readable by humans *and* machines - hence, this module can be used to create a \"living styleguide\". The methodology and ideas behind Knyle Style Sheets are contained in [the specification](https://github.com/kneath/kss/blob/master/SPEC.md).\n\nThere's an example project in the [demo directory](https://github.com/kss-node/kss-node/tree/master/demo) of this repo.\n\n## Installation\n\nJust one line: `npm install kss`. If you want to use the command line interface, make sure the installation is global: `npm install -g kss`\n\n## Using the CLI\n\nTo get you up and running quickly, a styleguide generator is included that can be used from the command line. It parses a directory of stylesheets and spits out a set of static HTML files like the ones used on this site.\n\n```\nUsage: kss-node <sourcedir> <destdir> [options]\n\n<destdir> defaults to \"styleguide\" if not specified.\n\nOptions:\n  -i, --init       Create a new styleguide template to work from\n  -t, --template   Use a custom template to build your styleguide\n  -m, --mask       Use a custom mask for detecting stylesheets in the source directory, e.g. \"*.css\"\n  -c, --css        Include a CSS stylesheet\n  -s, --style      Compile and include a stylesheet - the precompiler is chosen based on file extension\n  -l, --less       Compile and include a LESS stylesheet\n  -S, --sass       Compile and include a SASS stylesheet\n  -y, --stylus     Compile and include a Stylus stylesheet\n  -L, --load-path  Include a load path for precompiler imports\n```\n\nYou'll need to specify a directory containing all of your stylesheet files to be parsed for documentation as the first argument. Optionally, the second argument can be used to specify a target directory. Your CSS won't be included by default, hence you should use the `--less`, `--css`, etc. flags to point to a stylesheet to compile and include. You can generate a copy of the demo styleguide like so:\n\n    $ kss-node demo styleguide --less demo/styles.less\n\nYou can create your own templates too. Use the `node-kss --init` command to initialize a copy of the default template so you can edit it and use it when generating your styleguide with the `--template` flag. This option is best when you need to compile your stylesheets with a preprocessor workflow not supported by kss-node; simply link the generated CSS from inside the custom template's index.html.\n\n    $ kss-node --init custom-template\n    $ kss-node ../path/to/sass styleguide --template custom-template\n\nThe default template should look something like this:\n\n![CLI Template Preview](https://raw.github.com/kss-node/kss-node/master/demo/preview.png)\n\n## Using kss-node from Node\n\nCheck out the [Module API](https://github.com/kss-node/kss-node/wiki/Module-API) a full explanation. Here's an example:\n\n``` javascript\nvar kss = require('kss'),\n    options = {\n        markdown: false\n    };\n\nkss.traverse('public/stylesheets/', options, function(err, styleguide) {\n    if (err) throw err;\n\n    styleguide.section('2.1.1')                                   // <KssSection>\n    styleguide.section('2.1.1').description()                     // A button suitable for giving stars to someone\n    styleguide.section('2.1.1').modifiers(0)                      // <KssModifier>\n    styleguide.section('2.1.1').modifiers(0).name                 // ':hover'\n    styleguide.section('2.1.1').modifiers(0).description          // 'Subtle hover highlight'\n    styleguide.section('2.1.1').modifiers(':hover').description() // 'Subtle hover highlight'\n    styleguide.section('2.1.1').modifiers(0).className()          // 'pseudo-class-hover'\n    styleguide.section('2.x.x')                                   // [<KssSection>, ...]\n    styleguide.section('2.1.1').modifiers()                       // [<KssModifier>, ...]\n});\n```\n\n## Differences\n\nIncluded are a few additional (optional) features to allow for completely automated styleguide generation.\n\nTake a look at the [demo project](https://github.com/kss-node/kss-node/tree/master/demo) for some examples.\n\n*Overview Document**. This \"overview\" page is generated from a Markdown file, which you should place in the directory you're generating from, just name it `styleguide.md` and it will be included in the final styleguide automatically.\n\n**HTML Markup**. In `kss-node` you can include sample markup in your styleguide entries. This is not only helpful for newcomers to a project, but is also used by the generator to include samples in your styleguide - just start a paragraph in your description section with `Markup:` like so:\n\n``` javascript\n// Buttons\n//\n// Buttons can and should be clicked.\n//\n// Markup: <button class=\"button {$modifiers}\">\n//\n// :hover - Highlight the button when hovered.\n//\n// Styleguide 1.1\n```\n\n**Multi-line descriptions**. You can run your descriptions over multiple lines and paragraphs, and if you don't want to include the \"modifiers\" section you don't have to.\n\n## Development\n\nForking, hacking, tearing apart of this module welcome - it still needs some cleaning up.\n\nIf you've got [mocha](https://github.com/visionmedia/mocha) installed, you can run the module's tests with `npm test` or `make test`.\n\nTo generate a new version of the demo styleguide, use `make gh-pages`. After committing your changes to master you can use the `gh-pages.sh` script to move this over to the `gh-pages` branch real quick.\n\n## Contributors\n\n* [John Albin Wilkins](https://github.com/JohnAlbin)\n* [Warin](https://github.com/Warin)\n* [Manuel Goerlich](https://github.com/MaThGo)\n* [Kevin Lamping](https://github.com/klamping)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/kss-node/kss-node/issues"
  },
  "_id": "kss@1.0.0",
  "_from": "kss@^1.0.0"
}
